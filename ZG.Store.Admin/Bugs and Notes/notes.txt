* SQL connection string
  localhost: "Server=LAPTOP-Q3UKFVOU\\ZXSQLSERVER2;Database=ZGStore;User Id=sa;Password=zzc2009!;MultipleActiveResultSets=true"
  azure sql server: Server=tcp:zgstore.database.windows.net,1433;Initial Catalog=ZGStore;Persist Security Info=False;User ID=czhang;Password=Zzc2009!;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;

* asp.net core web api by default don't serve static files.
  have to add package Microsoft.AspNetCore.StaticFiles and add app.UseStaticFiles();

* have to enable CORS for the angular app because angular 2+'s default working environment runs a development 
  server off a seperate port which is effectively a seperate domain and all calls back to the main ASP.NET site 
  for the API calls effectively are cross domain calls

* use Angular CLI

* angular problem: reload cause 404 because server could not found index.html in another dir, e.g. http://localhost:50105/productcategories
  solution: put { useHash: true } in app-routing.module.ts

* same React problem: reload a url other than / won't work. Here is a good explaination:
  https://stackoverflow.com/questions/27928372/react-router-urls-dont-work-when-refreshing-or-writting-manually
  and
  https://github.com/jintoppy/react-training/blob/master/basic/node_modules/react-router/docs/guides/Histories.md#browserhistory
  I just used hashHistory instead of browserHistory, but browserHistory is recommended

* http://angularjs.blogspot.com/2016/11/easy-angular-authentication-with-json.html

* Any application that uses JWT authentication should always be served over HTTPS to prevent malicious interception of the token.

* TODO: use Auth0 to generate the jwt token

* API should always return DTO, not the model

* In order to generate the css bundle, you have to add imports in styles.css, e.g.
  @import "~bootstrap/dist/css/bootstrap.min.css";
  @import "~font-awesome/css/font-awesome.css";

* changed outDir from "dist" to "../wwwroot" as "outDir": "../wwwroot" in .angular-cli.json

* In order to change the <base href> to be <base href="/product-app/"> in index.html, in package.json change the "build" script to "build": "ng build --prod --base-href /product-app/". 

* disable building of TypeScript files in VS 2017
  add node <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked> to the first <PropertyGroup> element in .csproj file.

* The project doesn’t know how to run the profile IIS Express.
  Tools -> Extensions and Updates -> make sure Microsft ASP.NET and Web Tools extension and Microsoft Azure App Service Tools extension are enabled

* No executable found matching command "dotnet-ef"
  make suer this is in the project file:
  <ItemGroup>
    <DotNetCliToolReference Include="Microsoft.EntityFrameworkCore.Tools.DotNet" Version="1.0.1" />
  </ItemGroup>

* With Angular-cli the builded filename is e.g. main.[hash].bundle.js when use ng build -prod, like this main.0125edf35c8b257a8c50.bundle.js
  So you can not simply inject the SPA using the following. You need "build": "ng build --prod --base-href /product-app/ --output-hashing none" (browser then might use the cached old version), refer to this: https://stackoverflow.com/questions/39718803/custom-generated-filename-with-angular-cli
  <app-root></app-root>
  <script>
    var domain = "http://localhost:4200/";
    ['inline.bundle.js', 'polyfills.bundle.js', 'scripts.bundle.js', 'styles.bundle.js',
    'vendor.bundle.js', 'main.bundle.js'].forEach(function(src){
        var script = document.createElement('script');
        script.src = domain + src;
        script.async = false;

        document.head.appendChild(script);
    });
  </script>

* To enable full text search in Azure SQL Server
  CREATE FULLTEXT CATALOG [Products-Full-Text-Catalog]WITH ACCENT_SENSITIVITY = ON
  CREATE FULLTEXT INDEX ON dbo.Products (Name, Description) KEY INDEX PK_Products ON [Products-Full-Text-Catalog];  

* Webpack.config how to just copy the index.html to the dist folder
  https://stackoverflow.com/questions/32155154/webpack-config-how-to-just-copy-the-index-html-to-the-dist-folder

* ReactApp: to include imgs into the dist, e.g.
  body{
    height: 100vh;
    background-color: $brand-purple;
    color: $brand-green;
    font-size: $font-size;
    font-weight: 900;
    font-family: $merriweather;
    background: url('/blog-app/images/20150620_095446.jpg')
}

